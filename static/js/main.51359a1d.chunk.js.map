{"version":3,"sources":["api/api.js","redux/boardReducer.js","components/gameContainer/Cell/Cell.jsx","components/gameContainer/Cell/const.js","components/gameContainer/Row/Row.jsx","components/gameContainer/HoverSquaresBoard/HoverSquaresBoard.jsx","components/common/Loader.jsx","components/gameContainer/GameMenu/GameMenu.jsx","components/gameContainer/GameContainer.jsx","components/gameContainer/const.js","App.js","redux/redux-store.js","index.js","assets/img/Spinner-1s-200px.svg"],"names":["instance","axios","baseURL","headers","gameAPI","get","then","response","data","initialState","squares","settings","boardReducer","state","arguments","length","undefined","action","type","_objectSpread","concat","_toConsumableArray","payload","filter","square","mapDispatchToProps","setSquareAC","resetSquareAC","connect","_ref","rowNumber","column","_useState","useState","_useState2","_slicedToArray","color","setColor","React","createElement","key","className","onMouseEnter","prevColor","Row","tableSize","cells","i","push","Cell","board","map","Loader","Fragment","src","loader","alt","clearSquaresAC","reduxForm","form","handleSubmit","setStartGame","settingsArr","Object","keys","onSubmit","Field","name","component","onChange","option","field","value","getSettingsThunkCreator","dispatch","setTableSize","_useState3","_useState4","startGame","useEffect","renderTable","GameMenu","_ref2","gameMode","alert","HoverSquaresBoard","App","GameContainer","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","Provider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.51359a1d.chunk.js","sourcesContent":["import * as axios from 'axios/index'\r\n\r\nconst instance = axios.create({\r\n  baseURL: ' https://60816d9073292b0017cdd833.mockapi.io/modes',\r\n  headers: {\r\n\r\n  }\r\n})\r\n\r\nexport const gameAPI = {\r\n  getSettings () {\r\n    return instance.get()\r\n      .then(response => response.data)\r\n  }\r\n}\r\n","import { gameAPI } from '../api/api'\r\n\r\nconst SET_SQUARE = 'SET-SQUARE'\r\nconst SET_SETTINGS = 'SET-SETTINGS'\r\nconst RESET_SQUARE = 'RESET-SQUARE'\r\nconst CLEAR_SQUARES = 'CLEAR-SQUARES'\r\n\r\nconst initialState = {\r\n  squares: [],\r\n  settings: null,\r\n}\r\n\r\nconst boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SQUARE: {\r\n      return {\r\n        ...state,\r\n        squares:[...state.squares, action.payload]\r\n      }\r\n    }\r\n    case RESET_SQUARE: {\r\n      return {\r\n        ...state,\r\n        squares:state.squares.filter(square =>square !== action.payload)\r\n      }\r\n    }\r\n    case CLEAR_SQUARES: {\r\n      return {\r\n        ...state,\r\n        squares:[]\r\n      }\r\n    }\r\n    case SET_SETTINGS: {\r\n      return {\r\n        ...state,\r\n        settings: { ...action.settings }\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setSquareAC = (payload) => ({ type: SET_SQUARE, payload: payload })\r\nexport const clearSquaresAC = () => ({ type: CLEAR_SQUARES })\r\nexport const resetSquareAC = (payload) => ({ type: RESET_SQUARE, payload: payload })\r\nconst setSettingsAC = (settings) => ({ type: SET_SETTINGS, settings: settings })\r\n\r\nexport const getSettingsThunkCreator = () => {\r\n  return (dispatch) => {\r\n    gameAPI.getSettings()\r\n      .then(data => dispatch(setSettingsAC(data)))\r\n  }\r\n}\r\n\r\n\r\nexport default boardReducer\r\n","import React, { useState } from \"react\";\r\nimport { WHITE, BLUE } from \"./const\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    setSquareAC,\r\n    resetSquareAC\r\n  } from \"../../../redux/boardReducer\";\r\nimport \"./Cell.css\";\r\n\r\nconst Cell = ({ rowNumber, column,setSquareAC,resetSquareAC }) => {\r\n  const [color, setColor] = useState(WHITE);\r\n  const hoverHandler = () => {\r\n    \r\n    setColor((prevColor) => {\r\n      if (prevColor === WHITE) {\r\n        setSquareAC(`Row:${rowNumber} Column:${column}`)\r\n        return BLUE;\r\n      } else {\r\n        resetSquareAC(`Row:${rowNumber} Column:${column}`)\r\n        return WHITE;\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <td\r\n      key={`${rowNumber}-${column}`}\r\n      className={`cell ${color}`}\r\n      onMouseEnter={hoverHandler}\r\n    >\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    setSquareAC,\r\n    resetSquareAC\r\n  };\r\n\r\nexport default connect(null, mapDispatchToProps)(Cell);\r\n","export const WHITE = 'white'\r\nexport const BLUE = 'blue'","import React from \"react\";\r\nimport Cell from \"../Cell/Cell\";\r\n\r\nconst Row = ({ rowNumber, tableSize }) => {\r\n  const cells = [];\r\n  for (let i = 1; i <= tableSize; i++) {\r\n    cells.push(<Cell rowNumber={rowNumber} column={i} key={i} />);\r\n  }\r\n  return <tr key={rowNumber}>{cells}</tr>;\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HoverSquaresBoard = ({ squares }) => {\r\n  return (\r\n    <div>\r\n      <h1>Hover Squeres</h1>\r\n      \r\n      {squares.map((square) => (\r\n        <div key={square}>{square}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  squares: state.board.squares,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(HoverSquaresBoard);\r\n","import React from 'react'\r\nimport './Loader.css'\r\nimport loader from '../../assets/img/Spinner-1s-200px.svg'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <img src={loader} alt=\"louder\" className='loader'/>\r\n    </>\r\n  )\r\n}\r\nexport default Loader\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearSquaresAC } from \"../../../redux/boardReducer\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport \"./GameMenu.css\";\r\n\r\n\r\nconst GameMenu = ({ handleSubmit, settings,setStartGame,clearSquaresAC }) => {\r\n  const settingsArr = Object.keys(settings);\r\n  const handlerSelect = ()=>{\r\n    setStartGame(false)\r\n    clearSquaresAC()\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"menu\">\r\n      <Field name=\"gameMode\" component=\"select\" className=\"gameMode\" onChange={handlerSelect}>\r\n        <option>Pick game mode</option>\r\n        {settingsArr.map((option) => {\r\n          return <option key={settings[option].field}value={settings[option].field}>{settings[option].name}</option>;\r\n        })}\r\n      </Field>\r\n       <button className=\"playBtn\">PLAY</button>\r\n    </form>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  settings: state.board.settings,\r\n});\r\nconst mapDispatchToProps = {\r\n  clearSquaresAC\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(reduxForm({ form: \"Game\" })(GameMenu));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./GameContainer.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSettingsThunkCreator } from \"../../redux/boardReducer\";\r\nimport Row from \"./Row/Row\";\r\nimport HoverSquaresBoard from \"./HoverSquaresBoard/HoverSquaresBoard\";\r\nimport Loader from \"../common/Loader\";\r\nimport GameMenu from \"./GameMenu/GameMenu\";\r\nimport { NOT_SELECTED_MODE } from \"./const\";\r\n\r\nfunction GameContainer({ getSettingsThunkCreator, settings }) {\r\n  const [tableSize, setTableSize] = useState(null);\r\n  const [startGame, setStartGame] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getSettingsThunkCreator();\r\n  }, []);\r\n\r\n  const startGameHandler = ({ gameMode }) => {\r\n    if (gameMode === NOT_SELECTED_MODE) {\r\n      alert(\"Please choose game mode\");\r\n      return;\r\n    }\r\n    setTableSize(gameMode);\r\n    setStartGame(true);\r\n  };\r\n\r\n  if (!settings) {\r\n    return <Loader />;\r\n  }\r\n  const renderTable = [];\r\n  for (let i = 1; i <= tableSize; i++) {\r\n    renderTable.push(<Row rowNumber={i} tableSize={tableSize} key={i}/>);\r\n  }\r\n  return (\r\n    <div className=\"gameContainerWrapper\">\r\n      <div className=\"menuAndBoardWrapper\">\r\n        <div>\r\n          <GameMenu onSubmit={startGameHandler} setStartGame={setStartGame} />\r\n          {startGame && (\r\n            <table>\r\n              <tbody>{renderTable}</tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n        <HoverSquaresBoard  />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  settings: state.board.settings,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getSettingsThunkCreator,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer);\r\n","export const NOT_SELECTED_MODE = 'Pick game mode'","import React from 'react'\r\nimport GameContainer from './components/gameContainer/GameContainer'\r\n\r\nfunction App () {\r\n  return (\r\n    <GameContainer />\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport boardReducer from './boardReducer'\r\n\r\nconst reducers = combineReducers({\r\n  form: formReducer,\r\n  board: boardReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './redux/redux-store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>, document.getElementById('root'))\r\n","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.dab96fef.svg\";"],"sourceRoot":""}